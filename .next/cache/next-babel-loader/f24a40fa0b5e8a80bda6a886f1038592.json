{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\prisma-examples\\\\typescript\\\\graphql-auth\\\\pages\\\\index.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport { withApollo } from '../apollo/client';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nconst FeedQuery = gql`\n  query FeedQuery {\n    feed {\n      id\n      title\n      content\n      published\n      author {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst Post = ({\n  post\n}) => __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${post.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }\n}, __jsx(\"a\", {\n  className: \"jsx-4035363373\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, __jsx(\"h2\", {\n  className: \"jsx-4035363373\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n}, post.title), __jsx(\"small\", {\n  className: \"jsx-4035363373\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n}, \"By \", post.author.name), __jsx(\"p\", {\n  className: \"jsx-4035363373\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}, post.content), __jsx(_JSXStyle, {\n  id: \"4035363373\",\n  __self: this\n}, \"a.jsx-4035363373{-webkit-text-decoration:none;text-decoration:none;color:inherit;padding:2rem;display:block;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccHJpc21hLWV4YW1wbGVzXFx0eXBlc2NyaXB0XFxncmFwaHFsLWF1dGhcXHBhZ2VzXFxpbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkJrQixBQUdnQyxrREFDUCxjQUNELGFBQ0MsY0FDaEIiLCJmaWxlIjoiQzpcXHByb2plY3RzXFxwcmlzbWEtZXhhbXBsZXNcXHR5cGVzY3JpcHRcXGdyYXBocWwtYXV0aFxccGFnZXNcXGluZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnXHJcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcclxuaW1wb3J0IHsgd2l0aEFwb2xsbyB9IGZyb20gJy4uL2Fwb2xsby9jbGllbnQnXHJcbmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10YWcnXHJcbmltcG9ydCB7IHVzZVF1ZXJ5IH0gZnJvbSAnQGFwb2xsby9yZWFjdC1ob29rcydcclxuXHJcbmNvbnN0IEZlZWRRdWVyeSA9IGdxbGBcclxuICBxdWVyeSBGZWVkUXVlcnkge1xyXG4gICAgZmVlZCB7XHJcbiAgICAgIGlkXHJcbiAgICAgIHRpdGxlXHJcbiAgICAgIGNvbnRlbnRcclxuICAgICAgcHVibGlzaGVkXHJcbiAgICAgIGF1dGhvciB7XHJcbiAgICAgICAgaWRcclxuICAgICAgICBuYW1lXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbmBcclxuXHJcbmNvbnN0IFBvc3QgPSAoeyBwb3N0IH0pID0+IChcclxuICA8TGluayBocmVmPVwiL3AvW2lkXVwiIGFzPXtgL3AvJHtwb3N0LmlkfWB9PlxyXG4gICAgPGE+XHJcbiAgICAgIDxoMj57cG9zdC50aXRsZX08L2gyPlxyXG4gICAgICA8c21hbGw+Qnkge3Bvc3QuYXV0aG9yLm5hbWV9PC9zbWFsbD5cclxuICAgICAgPHA+e3Bvc3QuY29udGVudH08L3A+XHJcbiAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICBhIHtcclxuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgICAgICAgcGFkZGluZzogMnJlbTtcclxuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIH1cclxuICAgICAgYH08L3N0eWxlPlxyXG4gICAgPC9hPlxyXG4gIDwvTGluaz5cclxuKVxyXG5cclxuY29uc3QgQmxvZyA9ICgpID0+IHtcclxuICBjb25zdCB7IGxvYWRpbmcsIGVycm9yLCBkYXRhIH0gPSB1c2VRdWVyeShGZWVkUXVlcnkpXHJcblxyXG4gIGlmIChsb2FkaW5nKSB7XHJcbiAgICByZXR1cm4gPGRpdj5Mb2FkaW5nIC4uLjwvZGl2PlxyXG4gIH1cclxuICBpZiAoZXJyb3IpIHtcclxuICAgIHJldHVybiA8ZGl2PkVycm9yOiB7ZXJyb3IubWVzc2FnZX08L2Rpdj5cclxuICB9XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8TGF5b3V0PlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhZ2VcIj5cclxuICAgICAgICA8aDE+TXkgQmxvZzwvaDE+XHJcbiAgICAgICAgPG1haW4+XHJcbiAgICAgICAgICB7ZGF0YS5mZWVkLm1hcChwb3N0ID0+IChcclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb3N0XCI+XHJcbiAgICAgICAgICAgICAgPFBvc3Qga2V5PXtwb3N0LmlkfSBwb3N0PXtwb3N0fSAvPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICkpfVxyXG4gICAgICAgIDwvbWFpbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAucG9zdCB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgICAgICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4xcyBlYXNlLWluO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnBvc3Q6aG92ZXIge1xyXG4gICAgICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAzcHggI2FhYTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wb3N0ICsgLnBvc3Qge1xyXG4gICAgICAgICAgbWFyZ2luLXRvcDogMnJlbTtcclxuICAgICAgICB9XHJcbiAgICAgIGB9PC9zdHlsZT5cclxuICAgIDwvTGF5b3V0PlxyXG4gIClcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgd2l0aEFwb2xsbyhCbG9nKVxyXG4iXX0= */\\n/*@ sourceURL=C:\\\\\\\\projects\\\\\\\\prisma-examples\\\\\\\\typescript\\\\\\\\graphql-auth\\\\\\\\pages\\\\\\\\index.tsx */\")));\n\nconst Blog = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FeedQuery);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    }, \"Loading ...\");\n  }\n\n  if (error) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3495282894\" + \" \" + \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-3495282894\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"My Blog\"), __jsx(\"main\", {\n    className: \"jsx-3495282894\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, data.feed.map(post => __jsx(\"div\", {\n    className: \"jsx-3495282894\" + \" \" + \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(Post, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }))))), __jsx(_JSXStyle, {\n    id: \"3495282894\",\n    __self: this\n  }, \".post.jsx-3495282894{background:white;-webkit-transition:box-shadow 0.1s ease-in;transition:box-shadow 0.1s ease-in;}.post.jsx-3495282894:hover{box-shadow:1px 1px 3px #aaa;}.post.jsx-3495282894+.post.jsx-3495282894{margin-top:2rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccHJpc21hLWV4YW1wbGVzXFx0eXBlc2NyaXB0XFxncmFwaHFsLWF1dGhcXHBhZ2VzXFxpbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkRrQixBQUc0QixBQUtXLEFBSVosZ0JBQ2xCLENBVHFDLFdBS3JDLG1FQUpBIiwiZmlsZSI6IkM6XFxwcm9qZWN0c1xccHJpc21hLWV4YW1wbGVzXFx0eXBlc2NyaXB0XFxncmFwaHFsLWF1dGhcXHBhZ2VzXFxpbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0J1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXHJcbmltcG9ydCB7IHdpdGhBcG9sbG8gfSBmcm9tICcuLi9hcG9sbG8vY2xpZW50J1xyXG5pbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJ1xyXG5pbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gJ0BhcG9sbG8vcmVhY3QtaG9va3MnXHJcblxyXG5jb25zdCBGZWVkUXVlcnkgPSBncWxgXHJcbiAgcXVlcnkgRmVlZFF1ZXJ5IHtcclxuICAgIGZlZWQge1xyXG4gICAgICBpZFxyXG4gICAgICB0aXRsZVxyXG4gICAgICBjb250ZW50XHJcbiAgICAgIHB1Ymxpc2hlZFxyXG4gICAgICBhdXRob3Ige1xyXG4gICAgICAgIGlkXHJcbiAgICAgICAgbmFtZVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5gXHJcblxyXG5jb25zdCBQb3N0ID0gKHsgcG9zdCB9KSA9PiAoXHJcbiAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7cG9zdC5pZH1gfT5cclxuICAgIDxhPlxyXG4gICAgICA8aDI+e3Bvc3QudGl0bGV9PC9oMj5cclxuICAgICAgPHNtYWxsPkJ5IHtwb3N0LmF1dGhvci5uYW1lfTwvc21hbGw+XHJcbiAgICAgIDxwPntwb3N0LmNvbnRlbnR9PC9wPlxyXG4gICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgICAgICAgIHBhZGRpbmc6IDJyZW07XHJcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB9XHJcbiAgICAgIGB9PC9zdHlsZT5cclxuICAgIDwvYT5cclxuICA8L0xpbms+XHJcbilcclxuXHJcbmNvbnN0IEJsb2cgPSAoKSA9PiB7XHJcbiAgY29uc3QgeyBsb2FkaW5nLCBlcnJvciwgZGF0YSB9ID0gdXNlUXVlcnkoRmVlZFF1ZXJ5KVxyXG5cclxuICBpZiAobG9hZGluZykge1xyXG4gICAgcmV0dXJuIDxkaXY+TG9hZGluZyAuLi48L2Rpdj5cclxuICB9XHJcbiAgaWYgKGVycm9yKSB7XHJcbiAgICByZXR1cm4gPGRpdj5FcnJvcjoge2Vycm9yLm1lc3NhZ2V9PC9kaXY+XHJcbiAgfVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPExheW91dD5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJwYWdlXCI+XHJcbiAgICAgICAgPGgxPk15IEJsb2c8L2gxPlxyXG4gICAgICAgIDxtYWluPlxyXG4gICAgICAgICAge2RhdGEuZmVlZC5tYXAocG9zdCA9PiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9zdFwiPlxyXG4gICAgICAgICAgICAgIDxQb3N0IGtleT17cG9zdC5pZH0gcG9zdD17cG9zdH0gLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICApKX1cclxuICAgICAgICA8L21haW4+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgLnBvc3Qge1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICAgICAgICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuMXMgZWFzZS1pbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wb3N0OmhvdmVyIHtcclxuICAgICAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggM3B4ICNhYWE7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAucG9zdCArIC5wb3N0IHtcclxuICAgICAgICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICAgICAgfVxyXG4gICAgICBgfTwvc3R5bGU+XHJcbiAgICA8L0xheW91dD5cclxuICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHdpdGhBcG9sbG8oQmxvZylcclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\projects\\\\\\\\prisma-examples\\\\\\\\typescript\\\\\\\\graphql-auth\\\\\\\\pages\\\\\\\\index.tsx */\"));\n};\n\nexport default withApollo(Blog);","map":{"version":3,"sources":["C:/projects/prisma-examples/typescript/graphql-auth/pages/index.tsx"],"names":["Layout","Link","withApollo","gql","useQuery","FeedQuery","Post","post","id","title","author","name","content","Blog","loading","error","data","message","feed","map"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,MAAMC,SAAS,GAAGF,GAAI;;;;;;;;;;;;;CAAtB;;AAeA,MAAMG,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACX,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKA,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKD,IAAI,CAACE,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAWF,IAAI,CAACG,MAAL,CAAYC,IAAvB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIJ,IAAI,CAACK,OAAT,CAHF;AAAA;AAAA;AAAA,q8FADF,CADF;;AAkBA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BZ,QAAQ,CAACC,SAAD,CAAzC;;AAEA,MAAIS,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACE,OAAnB,CAAP;AACD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAcZ,IAAI,IACjB;AAAA,wCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,IAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CAFF,CADF;AAAA;AAAA;AAAA,klGADF;AA4BD,CAtCD;;AAwCA,eAAeL,UAAU,CAACW,IAAD,CAAzB","sourcesContent":["import Layout from '../components/Layout'\r\nimport Link from 'next/link'\r\nimport { withApollo } from '../apollo/client'\r\nimport gql from 'graphql-tag'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nconst FeedQuery = gql`\r\n  query FeedQuery {\r\n    feed {\r\n      id\r\n      title\r\n      content\r\n      published\r\n      author {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Post = ({ post }) => (\r\n  <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\r\n    <a>\r\n      <h2>{post.title}</h2>\r\n      <small>By {post.author.name}</small>\r\n      <p>{post.content}</p>\r\n      <style jsx>{`\r\n        a {\r\n          text-decoration: none;\r\n          color: inherit;\r\n          padding: 2rem;\r\n          display: block;\r\n        }\r\n      `}</style>\r\n    </a>\r\n  </Link>\r\n)\r\n\r\nconst Blog = () => {\r\n  const { loading, error, data } = useQuery(FeedQuery)\r\n\r\n  if (loading) {\r\n    return <div>Loading ...</div>\r\n  }\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"page\">\r\n        <h1>My Blog</h1>\r\n        <main>\r\n          {data.feed.map(post => (\r\n            <div className=\"post\">\r\n              <Post key={post.id} post={post} />\r\n            </div>\r\n          ))}\r\n        </main>\r\n      </div>\r\n      <style jsx>{`\r\n        .post {\r\n          background: white;\r\n          transition: box-shadow 0.1s ease-in;\r\n        }\r\n\r\n        .post:hover {\r\n          box-shadow: 1px 1px 3px #aaa;\r\n        }\r\n\r\n        .post + .post {\r\n          margin-top: 2rem;\r\n        }\r\n      `}</style>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default withApollo(Blog)\r\n"]},"metadata":{},"sourceType":"module"}